import /system/etc/init/hw/init.safailnet.rc
import /system/etc/init/init.devicesetting.rc

on init
    # Boot time FS tune
    write /sys/block/sda/queue/iostats 0
    write /sys/block/sda/queue/scheduler cfq
    write /sys/block/sda/queue/iosched/slice_idle 0
    write /sys/block/sda/queue/read_ahead_kb 2048
    write /sys/block/sda/queue/nr_requests 256
    write /sys/block/sdf/queue/iostats 0
    write /sys/block/sdf/queue/scheduler cfq
    write /sys/block/sdf/queue/iosched/slice_idle 0
    write /sys/block/sdf/queue/read_ahead_kb 2048
    write /sys/block/sdf/queue/nr_requests 256
    write /sys/block/dm-0/queue/read_ahead_kb 2048
    write /sys/block/dm-1/queue/read_ahead_kb 2048
    write /sys/block/dm-2/queue/read_ahead_kb 2048

    # ZRAM setup
    write /sys/block/zram0/comp_algorithm lz4
    write /proc/sys/vm/page-cluster 0

on fs
    # debug boot process
    rm /cache/boot_lc_full.txt
    rm /cache/boot_lc_crash.txt
    rm /cache/boot_lc_kernel.txt
    start boot_lc
    start boot_lc_kernel
    start boot_lc_crash

on late-fs
    # Boot time FS tune
    write /sys/block/dm-3/queue/read_ahead_kb 2048

on property:init.svc.vendor.cnss_diag=running
    stop vendor.cnss_diag

on property:init.svc.vendor.ipacm-diag=running
    stop vendor.ipacm-diag

on property:init.svc.face_hal=restarting
    stop face_hal

    # Runtime FS tuning: as we have init boottime setting and kernel patch setting
    # default readahead to 2048KB. We should adjust the setting upon boot_complete
    # for runtime performance
    write /sys/block/sda/queue/read_ahead_kb 128
    write /sys/block/sda/queue/nr_requests 128
    write /sys/block/sda/queue/iostats 1
    write /sys/block/sdf/queue/read_ahead_kb 128
    write /sys/block/sdf/queue/nr_requests 128
    write /sys/block/sdf/queue/iostats 1
    write /sys/block/dm-0/queue/read_ahead_kb 128
    write /sys/block/dm-1/queue/read_ahead_kb 128
    write /sys/block/dm-2/queue/read_ahead_kb 128
    write /sys/block/dm-3/queue/read_ahead_kb 128

    # Enable ZRAM on boot_complete
    swapon_all /vendor/etc/fstab.qcom
    write /proc/sys/vm/swappiness 100

on post-fs-data
    #Hack until we build the vendor
    mount none /vendor/lost+found /vendor/overlay bind
    mount none /system/etc/fstab.qcom /vendor/etc/fstab.qcom bind

service boot_lc /system/bin/logcat -b all -D -f /cache/boot_lc_full.txt
    class main
    user root
    group root system
    disabled
    oneshot

service boot_lc_crash /system/bin/logcat -b crash -D -f /cache/boot_lc_crash.txt
    class main
    user root
    group root system
    disabled
    oneshot

service boot_lc_kernel /system/bin/logcat -b kernel -D -f /cache/boot_lc_kernel.txt
    class main
    user root
    group root system
    disabled
    oneshot

service prop-adap-core-gsi /vendor/bin/self-init gsicore
    class core
    user root
    group root system radio
    oneshot
    override
    disabled

service prop-adap-main-gsi /vendor/bin/self-init gsimain
    class main
    user root
    group root system radio
    oneshot
    override
    disabled

on property:gsm.version.baseband=*
    start set_baseband

service set_baseband /system/bin/init.set_baseband.sh
    class late_start
    user system
    group system
    oneshot

on property:sys.boot_completed=1
    stop boot_lc
    stop boot_lc_crash
    stop boot_lc_kernel
    # Restrict permissions to socket file 
    # to hide Magisk & co.
    chmod 440 /proc/net/unix
